# Generated by Django 5.2.4 on 2025-07-26 04:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_organization", models.BooleanField(default=False)),
                ("is_receiver", models.BooleanField(default=False)),
                ("phone_number_1", models.CharField(max_length=20)),
                ("phone_number_2", models.CharField(blank=True, max_length=20)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FoodListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(help_text="Required", max_length=100)),
                ("description", models.TextField(help_text="Required")),
                ("location", models.CharField(help_text="Required", max_length=255)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("quantity", models.FloatField(help_text="Quantity in kg (Required)")),
                (
                    "prepared_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and hour food was prepared (Required)",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="food_images/"),
                ),
                ("ai_report", models.TextField(blank=True)),
                ("recurring", models.BooleanField(default=False)),
                (
                    "storage",
                    models.CharField(blank=True, help_text="Required", max_length=50),
                ),
                (
                    "prepared_by",
                    models.CharField(blank=True, help_text="Required", max_length=50),
                ),
                (
                    "special_instructions",
                    models.TextField(blank=True, help_text="Optional"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "donor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.profile"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClaimedListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("claimed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "food_listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.foodlisting",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="claimed_listings",
                        to="app.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Rating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.PositiveSmallIntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                ("comment", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "claimed_listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.claimedlisting",
                    ),
                ),
                (
                    "ratee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_ratings",
                        to="app.profile",
                    ),
                ),
                (
                    "rater",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="given_ratings",
                        to="app.profile",
                    ),
                ),
            ],
            options={
                "unique_together": {("rater", "claimed_listing")},
            },
        ),
    ]
